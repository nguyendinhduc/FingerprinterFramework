/*
 * This file is generated by jOOQ.
*/
package com.uet.fingerpinter.db.tables;


import com.uet.fingerpinter.db.Keys;
import com.uet.fingerpinter.db.Public;
import com.uet.fingerpinter.db.tables.records.TrackingRecord;

import java.sql.Time;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tracking extends TableImpl<TrackingRecord> {

    private static final long serialVersionUID = -167907865;

    /**
     * The reference instance of <code>public.tracking</code>
     */
    public static final Tracking TRACKING = new Tracking();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrackingRecord> getRecordType() {
        return TrackingRecord.class;
    }

    /**
     * The column <code>public.tracking.id</code>.
     */
    public final TableField<TrackingRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('tracking_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.tracking.x</code>.
     */
    public final TableField<TrackingRecord, Integer> X = createField("x", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.tracking.y</code>.
     */
    public final TableField<TrackingRecord, Integer> Y = createField("y", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.tracking.created_time</code>.
     */
    public final TableField<TrackingRecord, Time> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.TIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIME)), this, "");

    /**
     * The column <code>public.tracking.room_id</code>.
     */
    public final TableField<TrackingRecord, Integer> ROOM_ID = createField("room_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.tracking.user_id</code>.
     */
    public final TableField<TrackingRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.tracking</code> table reference
     */
    public Tracking() {
        this("tracking", null);
    }

    /**
     * Create an aliased <code>public.tracking</code> table reference
     */
    public Tracking(String alias) {
        this(alias, TRACKING);
    }

    private Tracking(String alias, Table<TrackingRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tracking(String alias, Table<TrackingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TrackingRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TRACKING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TrackingRecord> getPrimaryKey() {
        return Keys.TRACKING_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TrackingRecord>> getKeys() {
        return Arrays.<UniqueKey<TrackingRecord>>asList(Keys.TRACKING_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TrackingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TrackingRecord, ?>>asList(Keys.TRACKING__TRACKING_1, Keys.TRACKING__TRACKING_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tracking as(String alias) {
        return new Tracking(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tracking rename(String name) {
        return new Tracking(name, null);
    }
}
