/*
 * This file is generated by jOOQ.
*/
package com.uet.fingerpinter.db.tables;


import com.uet.fingerpinter.db.Keys;
import com.uet.fingerpinter.db.LocationIndoor;
import com.uet.fingerpinter.db.tables.records.FingerprinterInfoGaussRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FingerprinterInfoGauss extends TableImpl<FingerprinterInfoGaussRecord> {

    private static final long serialVersionUID = -623227487;

    /**
     * The reference instance of <code>location_indoor.fingerprinter_info_gauss</code>
     */
    public static final FingerprinterInfoGauss FINGERPRINTER_INFO_GAUSS = new FingerprinterInfoGauss();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FingerprinterInfoGaussRecord> getRecordType() {
        return FingerprinterInfoGaussRecord.class;
    }

    /**
     * The column <code>location_indoor.fingerprinter_info_gauss.id</code>.
     */
    public final TableField<FingerprinterInfoGaussRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>location_indoor.fingerprinter_info_gauss.room_id</code>.
     */
    public final TableField<FingerprinterInfoGaussRecord, Integer> ROOM_ID = createField("room_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>location_indoor.fingerprinter_info_gauss.ap_name</code>.
     */
    public final TableField<FingerprinterInfoGaussRecord, String> AP_NAME = createField("ap_name", org.jooq.impl.SQLDataType.VARCHAR.length(2000), this, "");

    /**
     * The column <code>location_indoor.fingerprinter_info_gauss.mac_address</code>.
     */
    public final TableField<FingerprinterInfoGaussRecord, String> MAC_ADDRESS = createField("mac_address", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>location_indoor.fingerprinter_info_gauss.x</code>.
     */
    public final TableField<FingerprinterInfoGaussRecord, Integer> X = createField("x", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>location_indoor.fingerprinter_info_gauss.y</code>.
     */
    public final TableField<FingerprinterInfoGaussRecord, Integer> Y = createField("y", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>location_indoor.fingerprinter_info_gauss.mean</code>.
     */
    public final TableField<FingerprinterInfoGaussRecord, Double> MEAN = createField("mean", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    /**
     * The column <code>location_indoor.fingerprinter_info_gauss.standard_deviation</code>.
     */
    public final TableField<FingerprinterInfoGaussRecord, Double> STANDARD_DEVIATION = createField("standard_deviation", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    /**
     * The column <code>location_indoor.fingerprinter_info_gauss.measures</code>.
     */
    public final TableField<FingerprinterInfoGaussRecord, Integer> MEASURES = createField("measures", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>location_indoor.fingerprinter_info_gauss</code> table reference
     */
    public FingerprinterInfoGauss() {
        this("fingerprinter_info_gauss", null);
    }

    /**
     * Create an aliased <code>location_indoor.fingerprinter_info_gauss</code> table reference
     */
    public FingerprinterInfoGauss(String alias) {
        this(alias, FINGERPRINTER_INFO_GAUSS);
    }

    private FingerprinterInfoGauss(String alias, Table<FingerprinterInfoGaussRecord> aliased) {
        this(alias, aliased, null);
    }

    private FingerprinterInfoGauss(String alias, Table<FingerprinterInfoGaussRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return LocationIndoor.LOCATION_INDOOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FingerprinterInfoGaussRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FINGERPRINTER_INFO_GAUSS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FingerprinterInfoGaussRecord> getPrimaryKey() {
        return Keys.KEY_FINGERPRINTER_INFO_GAUSS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FingerprinterInfoGaussRecord>> getKeys() {
        return Arrays.<UniqueKey<FingerprinterInfoGaussRecord>>asList(Keys.KEY_FINGERPRINTER_INFO_GAUSS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<FingerprinterInfoGaussRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FingerprinterInfoGaussRecord, ?>>asList(Keys.FINGERPRINTER_INFO_GAUSS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FingerprinterInfoGauss as(String alias) {
        return new FingerprinterInfoGauss(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FingerprinterInfoGauss rename(String name) {
        return new FingerprinterInfoGauss(name, null);
    }
}
