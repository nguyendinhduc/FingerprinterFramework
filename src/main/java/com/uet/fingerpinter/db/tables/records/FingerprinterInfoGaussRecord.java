/*
 * This file is generated by jOOQ.
*/
package com.uet.fingerpinter.db.tables.records;


import com.uet.fingerpinter.db.tables.FingerprinterInfoGauss;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FingerprinterInfoGaussRecord extends UpdatableRecordImpl<FingerprinterInfoGaussRecord> implements Record9<Integer, Integer, String, String, Integer, Integer, Double, Double, Integer> {

    private static final long serialVersionUID = -285620716;

    /**
     * Setter for <code>location_indoor.fingerprinter_info_gauss.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>location_indoor.fingerprinter_info_gauss.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>location_indoor.fingerprinter_info_gauss.room_id</code>.
     */
    public void setRoomId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>location_indoor.fingerprinter_info_gauss.room_id</code>.
     */
    public Integer getRoomId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>location_indoor.fingerprinter_info_gauss.ap_name</code>.
     */
    public void setApName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>location_indoor.fingerprinter_info_gauss.ap_name</code>.
     */
    public String getApName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>location_indoor.fingerprinter_info_gauss.mac_address</code>.
     */
    public void setMacAddress(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>location_indoor.fingerprinter_info_gauss.mac_address</code>.
     */
    public String getMacAddress() {
        return (String) get(3);
    }

    /**
     * Setter for <code>location_indoor.fingerprinter_info_gauss.x</code>.
     */
    public void setX(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>location_indoor.fingerprinter_info_gauss.x</code>.
     */
    public Integer getX() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>location_indoor.fingerprinter_info_gauss.y</code>.
     */
    public void setY(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>location_indoor.fingerprinter_info_gauss.y</code>.
     */
    public Integer getY() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>location_indoor.fingerprinter_info_gauss.mean</code>.
     */
    public void setMean(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>location_indoor.fingerprinter_info_gauss.mean</code>.
     */
    public Double getMean() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>location_indoor.fingerprinter_info_gauss.standard_deviation</code>.
     */
    public void setStandardDeviation(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>location_indoor.fingerprinter_info_gauss.standard_deviation</code>.
     */
    public Double getStandardDeviation() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>location_indoor.fingerprinter_info_gauss.measures</code>.
     */
    public void setMeasures(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>location_indoor.fingerprinter_info_gauss.measures</code>.
     */
    public Integer getMeasures() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Integer, String, String, Integer, Integer, Double, Double, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Integer, String, String, Integer, Integer, Double, Double, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return FingerprinterInfoGauss.FINGERPRINTER_INFO_GAUSS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return FingerprinterInfoGauss.FINGERPRINTER_INFO_GAUSS.ROOM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return FingerprinterInfoGauss.FINGERPRINTER_INFO_GAUSS.AP_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return FingerprinterInfoGauss.FINGERPRINTER_INFO_GAUSS.MAC_ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return FingerprinterInfoGauss.FINGERPRINTER_INFO_GAUSS.X;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return FingerprinterInfoGauss.FINGERPRINTER_INFO_GAUSS.Y;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return FingerprinterInfoGauss.FINGERPRINTER_INFO_GAUSS.MEAN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return FingerprinterInfoGauss.FINGERPRINTER_INFO_GAUSS.STANDARD_DEVIATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return FingerprinterInfoGauss.FINGERPRINTER_INFO_GAUSS.MEASURES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getRoomId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getApName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getMacAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getX();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getMean();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getStandardDeviation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getMeasures();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FingerprinterInfoGaussRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FingerprinterInfoGaussRecord value2(Integer value) {
        setRoomId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FingerprinterInfoGaussRecord value3(String value) {
        setApName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FingerprinterInfoGaussRecord value4(String value) {
        setMacAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FingerprinterInfoGaussRecord value5(Integer value) {
        setX(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FingerprinterInfoGaussRecord value6(Integer value) {
        setY(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FingerprinterInfoGaussRecord value7(Double value) {
        setMean(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FingerprinterInfoGaussRecord value8(Double value) {
        setStandardDeviation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FingerprinterInfoGaussRecord value9(Integer value) {
        setMeasures(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FingerprinterInfoGaussRecord values(Integer value1, Integer value2, String value3, String value4, Integer value5, Integer value6, Double value7, Double value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FingerprinterInfoGaussRecord
     */
    public FingerprinterInfoGaussRecord() {
        super(FingerprinterInfoGauss.FINGERPRINTER_INFO_GAUSS);
    }

    /**
     * Create a detached, initialised FingerprinterInfoGaussRecord
     */
    public FingerprinterInfoGaussRecord(Integer id, Integer roomId, String apName, String macAddress, Integer x, Integer y, Double mean, Double standardDeviation, Integer measures) {
        super(FingerprinterInfoGauss.FINGERPRINTER_INFO_GAUSS);

        set(0, id);
        set(1, roomId);
        set(2, apName);
        set(3, macAddress);
        set(4, x);
        set(5, y);
        set(6, mean);
        set(7, standardDeviation);
        set(8, measures);
    }
}
