/*
 * This file is generated by jOOQ.
*/
package com.uet.fingerpinter.db.tables.records;


import com.uet.fingerpinter.db.tables.TrackingKNearest;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrackingKNearestRecord extends UpdatableRecordImpl<TrackingKNearestRecord> implements Record5<Integer, Integer, Double, Integer, Integer> {

    private static final long serialVersionUID = 581407245;

    /**
     * Setter for <code>location_indoor.tracking_k_nearest.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>location_indoor.tracking_k_nearest.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>location_indoor.tracking_k_nearest.tracking_id</code>.
     */
    public void setTrackingId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>location_indoor.tracking_k_nearest.tracking_id</code>.
     */
    public Integer getTrackingId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>location_indoor.tracking_k_nearest.distribution</code>.
     */
    public void setDistribution(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>location_indoor.tracking_k_nearest.distribution</code>.
     */
    public Double getDistribution() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>location_indoor.tracking_k_nearest.x</code>.
     */
    public void setX(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>location_indoor.tracking_k_nearest.x</code>.
     */
    public Integer getX() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>location_indoor.tracking_k_nearest.y</code>.
     */
    public void setY(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>location_indoor.tracking_k_nearest.y</code>.
     */
    public Integer getY() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Double, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Double, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return TrackingKNearest.TRACKING_K_NEAREST.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return TrackingKNearest.TRACKING_K_NEAREST.TRACKING_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return TrackingKNearest.TRACKING_K_NEAREST.DISTRIBUTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return TrackingKNearest.TRACKING_K_NEAREST.X;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return TrackingKNearest.TRACKING_K_NEAREST.Y;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getTrackingId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getDistribution();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getX();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrackingKNearestRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrackingKNearestRecord value2(Integer value) {
        setTrackingId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrackingKNearestRecord value3(Double value) {
        setDistribution(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrackingKNearestRecord value4(Integer value) {
        setX(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrackingKNearestRecord value5(Integer value) {
        setY(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrackingKNearestRecord values(Integer value1, Integer value2, Double value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TrackingKNearestRecord
     */
    public TrackingKNearestRecord() {
        super(TrackingKNearest.TRACKING_K_NEAREST);
    }

    /**
     * Create a detached, initialised TrackingKNearestRecord
     */
    public TrackingKNearestRecord(Integer id, Integer trackingId, Double distribution, Integer x, Integer y) {
        super(TrackingKNearest.TRACKING_K_NEAREST);

        set(0, id);
        set(1, trackingId);
        set(2, distribution);
        set(3, x);
        set(4, y);
    }
}
