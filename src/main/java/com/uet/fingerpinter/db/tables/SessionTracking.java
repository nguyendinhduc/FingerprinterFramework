/*
 * This file is generated by jOOQ.
*/
package com.uet.fingerpinter.db.tables;


import com.uet.fingerpinter.db.Keys;
import com.uet.fingerpinter.db.Public;
import com.uet.fingerpinter.db.tables.records.SessionTrackingRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionTracking extends TableImpl<SessionTrackingRecord> {

    private static final long serialVersionUID = 72394058;

    /**
     * The reference instance of <code>public.session_tracking</code>
     */
    public static final SessionTracking SESSION_TRACKING = new SessionTracking();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SessionTrackingRecord> getRecordType() {
        return SessionTrackingRecord.class;
    }

    /**
     * The column <code>public.session_tracking.id</code>.
     */
    public final TableField<SessionTrackingRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('session_tracking_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.session_tracking.tracking_start_id</code>.
     */
    public final TableField<SessionTrackingRecord, Integer> TRACKING_START_ID = createField("tracking_start_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.session_tracking.tracking_end_id</code>.
     */
    public final TableField<SessionTrackingRecord, Integer> TRACKING_END_ID = createField("tracking_end_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.session_tracking.created_time</code>.
     */
    public final TableField<SessionTrackingRecord, Timestamp> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>public.session_tracking.update_time</code>.
     */
    public final TableField<SessionTrackingRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>public.session_tracking</code> table reference
     */
    public SessionTracking() {
        this("session_tracking", null);
    }

    /**
     * Create an aliased <code>public.session_tracking</code> table reference
     */
    public SessionTracking(String alias) {
        this(alias, SESSION_TRACKING);
    }

    private SessionTracking(String alias, Table<SessionTrackingRecord> aliased) {
        this(alias, aliased, null);
    }

    private SessionTracking(String alias, Table<SessionTrackingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SessionTrackingRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SESSION_TRACKING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SessionTrackingRecord> getPrimaryKey() {
        return Keys.SESSION_TRACKING_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SessionTrackingRecord>> getKeys() {
        return Arrays.<UniqueKey<SessionTrackingRecord>>asList(Keys.SESSION_TRACKING_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SessionTrackingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SessionTrackingRecord, ?>>asList(Keys.SESSION_TRACKING__SESSION_TRACKING_1, Keys.SESSION_TRACKING__SESSION_TRACKING_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SessionTracking as(String alias) {
        return new SessionTracking(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SessionTracking rename(String name) {
        return new SessionTracking(name, null);
    }
}
